FROM docker.io/library/ubuntu:24.04
#FROM docker.io/library/ubuntu:24.04

LABEL com.github.containers.toolbox="true" \
      name="udistrobox" \
      version="24.04" \
      usage="This image is meant to be used with the distrobox command" \
      summary="Base image for creating Ubuntu distrobox containers" \
      maintainer="yeeha.zerog@gmail.com"

# Remove apt configuration optimized for containers
# Remove docker-gzip-indexes to help with "command-not-found"
RUN rm /etc/apt/apt.conf.d/docker-gzip-indexes /etc/apt/apt.conf.d/docker-no-languages

# Restore documentation but do not upgrade all packages
# Install ubuntu-minimal & ubuntu-standard
# Install extra packages as well as libnss-myhostname
#COPY extra-packages /
COPY packages.ubuntu /
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get -y install unminimize && \
    sed -Ei '/apt-get (update|upgrade)/s/^/#/' /usr/bin/unminimize && \
    yes | /usr/bin/unminimize && \
    DEBIAN_FRONTEND=noninteractive apt-get -y install \
        ubuntu-minimal ubuntu-standard \
        libnss-myhostname \
        flatpak-xdg-utils \
        $(cat packages.ubuntu | xargs) && \      
        #$(cat extra-packages | xargs) && \
    rm -rd /var/lib/apt/lists/*
#RUN rm /extra-packages
RUN rm packages.ubuntu

# Copy the setup scripts and package list
COPY scripts-ubuntu.sh /

# Run the setup scripts
RUN chmod +x scripts-ubuntu.sh && /scripts-ubuntu.sh
RUN rm /scripts-ubuntu.sh

# Fix empty bind-mount to clear selinuxfs (see #337)
RUN mkdir /usr/share/empty

# Add flatpak-spawn to /usr/bin
RUN ln -s /usr/libexec/flatpak-xdg-utils/flatpak-spawn /usr/bin/

# Having anything in /home prevents toolbox from symlinking /var/home there,
# and 'ubuntu' user with UID 1000 will most likely conflict with host user as well
RUN userdel --remove ubuntu

# Disable APT ESM hook which tries to enable some systemd services on each apt invocation
RUN rm /etc/apt/apt.conf.d/20apt-esm-hook.conf

# Ensure zsh is installed and set as default shell
RUN apt-get update && apt-get upgrade -y && \
    DEBIAN_FRONTEND=noninteractive apt-get -y install zsh && \
    zsh --version && \
    chsh -s /bin/zsh && \
    . ~/.zshrc

# Copy .zshrc configuration file
COPY .zshrc /root/.zshrc

RUN echo "Install oh my zsh" && \
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" && \
    . ~/.zshrc && \
    echo "\ue0b0 \u00b1 \ue0a0 \u27a6 \u2718 \u26a1 \u2699"
